{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/src/components/frontofcard.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport requiresLogin from './requires-login';\nimport { userGuess, fetchUserQuestions } from '../actions/frontofcardactions';\nimport { guessDismount } from '../actions/backofcardactions';\nexport var FrontOfCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FrontOfCard, _React$Component);\n\n  function FrontOfCard() {\n    _classCallCheck(this, FrontOfCard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FrontOfCard).apply(this, arguments));\n  }\n\n  _createClass(FrontOfCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch(fetchUserQuestions());\n    }\n  }, {\n    key: \"guessSubmit\",\n    value: function guessSubmit() {\n      var guess = this.refs.userguess.value;\n      this.props.dispatch(guessDismount());\n      return this.props.dispatch(userGuess(guess, this.props.history));\n    }\n  }, {\n    key: \"createFrontCard\",\n    value: function createFrontCard() {\n      var currentQuestion = this.props.currentQuestion;\n      return React.createElement(\"div\", {\n        className: \"dashboard-layout\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"background-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"dashboard-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dashboard-background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dashboard-banner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"welcome-message-prompt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left-banner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"\\uD83D\\uDC4B Welcome \", this.props.name, \"!\")))), React.createElement(\"div\", {\n        className: \"dashboard-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dashboard-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \" \\uD83D\\uDCD7 SQL Beginner \")), React.createElement(\"h3\", {\n        className: \"level\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"10 questions | Lifetime Score: 75%\"), React.createElement(\"div\", {\n        className: \"about-cards\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"SQL Learning Labs is a platform made to test your knowledge of SQL Bash commands, and to help you accelerate your learning.\"), React.createElement(Link, {\n        to: \"/frontofcard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"SQL Basics\"))), React.createElement(\"div\", {\n        className: \"dashboard-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \" \\uD83D\\uDD16 SQL Intermediate \")), React.createElement(\"h3\", {\n        className: \"level\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Coming Soon\"), React.createElement(\"div\", {\n        className: \"about-cards\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"SQL Learning Labs is a platform made to test your knowledge of SQL Bash commands, and to help you accelerate your learning.\"))))) // <div className=\"card with_shadow card_correct\">\n      //     <div className=\"arrow_box\">\n      //         <h2>SQL Question</h2>\n      //         <p>{currentQuestion.userQuestion ? currentQuestion.userQuestion : 'Loading.......'}</p>\n      //     </div>\n      //     Your Guess: <input type=\"text\" ref=\"userguess\" required></input>\n      //     <div>\n      //         <button onClick={() => this.guessSubmit()} type=\"input\">Submit</button>\n      //     </div>\n      // </div>\n      ;\n    }\n  }, {\n    key: \"rerender\",\n    value: function rerender() {\n      return React.createElement(\"div\", {\n        className: \"x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, this.createFrontCard());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.loading) {\n        return React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return this.rerender();\n      }\n    }\n  }]);\n\n  return FrontOfCard;\n}(React.Component); // user: test1\n// userquestions: [{question: 1 answer: 1 correct: 0 incorrect :0},\n// {question: 2 answer: 2 correct: 0 incorrect :0}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentQuestion: state.frontofcardReducer,\n    questionID: state.frontofcardReducer.userQuestionID\n  };\n};\n\nexport default withRouter(requiresLogin()(connect(mapStateToProps)(FrontOfCard)));","map":{"version":3,"sources":["/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/src/components/frontofcard.js"],"names":["React","connect","withRouter","requiresLogin","userGuess","fetchUserQuestions","guessDismount","FrontOfCard","props","dispatch","guess","refs","userguess","value","history","currentQuestion","name","createFrontCard","loading","rerender","Component","mapStateToProps","state","frontofcardReducer","questionID","userQuestionID"],"mappings":"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","sourcesContent":["'use strict';\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport requiresLogin from './requires-login';\nimport { userGuess, fetchUserQuestions } from '../actions/frontofcardactions';\nimport { guessDismount } from '../actions/backofcardactions';\n\nexport class FrontOfCard extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(fetchUserQuestions());\n  }\n  guessSubmit() {\n    const guess = this.refs.userguess.value;\n    this.props.dispatch(guessDismount());\n    return this.props.dispatch(userGuess(guess, this.props.history));\n  }\n  createFrontCard() {\n    const currentQuestion = this.props.currentQuestion;\n\n    return (\n      <div className=\"dashboard-layout\">\n        <div className=\"background-image\" />\n        {/* top part of dashboard */}\n        <div className=\"dashboard-top\">\n          {/* top bar of dashboard */}\n          <div className=\"dashboard-background\">\n            <div className=\"dashboard-banner\">\n              <div className=\"welcome-message-prompt\">\n                <div className=\"left-banner\">👋 Welcome {this.props.name}!</div>\n              </div>\n            </div>\n          </div>\n          {/* End of top bar of dashboard */}\n          <div className=\"dashboard-main\">\n            <div className=\"dashboard-box\">\n              <div className=\"title\">\n                <h1> 📗 SQL Beginner </h1>\n              </div>\n              <h3 className=\"level\">10 questions | Lifetime Score: 75%</h3>\n              <div className=\"about-cards\">\n                SQL Learning Labs is a platform made to test your knowledge of\n                SQL Bash commands, and to help you accelerate your learning.\n              </div>\n              <Link to=\"/frontofcard\">\n                <button>SQL Basics</button>\n              </Link>\n            </div>\n            <div className=\"dashboard-box\">\n              <div className=\"title\">\n                <h1> 🔖 SQL Intermediate </h1>\n              </div>\n              <h3 className=\"level\">Coming Soon</h3>\n              <div className=\"about-cards\">\n                SQL Learning Labs is a platform made to test your knowledge of\n                SQL Bash commands, and to help you accelerate your learning.\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      // <div className=\"card with_shadow card_correct\">\n      //     <div className=\"arrow_box\">\n      //         <h2>SQL Question</h2>\n      //         <p>{currentQuestion.userQuestion ? currentQuestion.userQuestion : 'Loading.......'}</p>\n      //     </div>\n      //     Your Guess: <input type=\"text\" ref=\"userguess\" required></input>\n      //     <div>\n      //         <button onClick={() => this.guessSubmit()} type=\"input\">Submit</button>\n      //     </div>\n      // </div>\n    );\n  }\n\n  rerender() {\n    return <div className=\"x\">{this.createFrontCard()}</div>;\n  }\n\n  render() {\n    if (this.props.loading) {\n      return <h2>Loading...</h2>;\n    } else {\n      return this.rerender();\n    }\n  }\n}\n\n// user: test1\n// userquestions: [{question: 1 answer: 1 correct: 0 incorrect :0},\n// {question: 2 answer: 2 correct: 0 incorrect :0}\n\nconst mapStateToProps = state => {\n  return {\n    currentQuestion: state.frontofcardReducer,\n    questionID: state.frontofcardReducer.userQuestionID\n  };\n};\n\nexport default withRouter(\n  requiresLogin()(connect(mapStateToProps)(FrontOfCard))\n);\n"]},"metadata":{},"sourceType":"module"}