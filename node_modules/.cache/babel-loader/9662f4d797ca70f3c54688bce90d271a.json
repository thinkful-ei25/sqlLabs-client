{"ast":null,"code":"import { API_BASE_URL } from '../config';\nimport { normalizeResponseErrors } from './utils';\nimport { bindActionCreators } from 'redux'; ///////////Fetch Questions\n\nexport var FETCH_USERQUESTIONS_SUCCESS = 'FETCH_USERQUESTIONS_SUCCESS';\nexport var fetchUserQuestionsSuccess = function fetchUserQuestionsSuccess(questions) {\n  return {\n    type: FETCH_USERQUESTIONS_SUCCESS,\n    questions: questions\n  };\n};\nexport var FETCH_USERQUESTIONS_ERROR = 'FETCH_USERQUESTIONS_ERROR';\nexport var fetchUserQuestionsError = function fetchUserQuestionsError(error) {\n  return {\n    type: FETCH_USERQUESTIONS_ERROR,\n    error: error\n  };\n};\nexport var SUBMIT_USERANSWER_SUCCESS = 'SUBMIT_USERANSWER_SUCCESS';\nexport var submitUserAnswerSuccess = function submitUserAnswerSuccess(guess) {\n  return {\n    type: SUBMIT_USERANSWER_SUCCESS,\n    guess: guess\n  };\n};\nexport var fetchUserQuestions = function fetchUserQuestions() {\n  return function (dispatch, getState) {\n    var authToken = getState().authReducer.authToken;\n    return fetch(\"\".concat(API_BASE_URL, \"/user/questions\"), {\n      method: 'GET',\n      headers: {\n        Authorization: \"Bearer \".concat(authToken)\n      }\n    }).then(function (res) {\n      return normalizeResponseErrors(res);\n    }).then(function (res) {\n      return res.json();\n    }).then(function (questions) {\n      dispatch(fetchUserQuestionsSuccess(questions));\n    }).catch(function (err) {\n      dispatch(fetchUserQuestionsError(err));\n    });\n  };\n};\nexport var userGuess = function userGuess(guess) {\n  return {\n    type: SUBMIT_USERANSWER_SUCCESS,\n    guess: guess\n  };\n};","map":{"version":3,"sources":["/Users/mkcnly/spacedrep/sql-labs-client/src/actions/frontofcardactions.js"],"names":["API_BASE_URL","normalizeResponseErrors","bindActionCreators","FETCH_USERQUESTIONS_SUCCESS","fetchUserQuestionsSuccess","questions","type","FETCH_USERQUESTIONS_ERROR","fetchUserQuestionsError","error","SUBMIT_USERANSWER_SUCCESS","submitUserAnswerSuccess","guess","fetchUserQuestions","dispatch","getState","authToken","authReducer","fetch","method","headers","Authorization","then","res","json","catch","err","userGuess"],"mappings":"AACA,SAASA,YAAT,QAA6B,WAA7B;AACA,SAASC,uBAAT,QAAwC,SAAxC;AACA,SAASC,kBAAT,QAAmC,OAAnC,C,CAGA;;AACA,OAAO,IAAMC,2BAA2B,GAAG,6BAApC;AACP,OAAO,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAAC,SAAS;AAAA,SAAK;AACnDC,IAAAA,IAAI,EAAEH,2BAD6C;AAEnDE,IAAAA,SAAS,EAATA;AAFmD,GAAL;AAAA,CAA3C;AAKP,OAAO,IAAME,yBAAyB,GAAG,2BAAlC;AACP,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAC,KAAK;AAAA,SAAK;AAC7CH,IAAAA,IAAI,EAAEC,yBADuC;AAE7CE,IAAAA,KAAK,EAALA;AAF6C,GAAL;AAAA,CAArC;AAIP,OAAO,IAAMC,yBAAyB,GAAG,2BAAlC;AACP,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAC,KAAK;AAAA,SAAK;AAC7CN,IAAAA,IAAI,EAAEI,yBADuC;AAE7CE,IAAAA,KAAK,EAALA;AAF6C,GAAL;AAAA,CAArC;AAKP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,SAAM,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC5D,QAAMC,SAAS,GAAGD,QAAQ,GAAGE,WAAX,CAAuBD,SAAzC;AACA,WAAOE,KAAK,WAAIlB,YAAJ,sBAAmC;AAC3CmB,MAAAA,MAAM,EAAE,KADmC;AAE3CC,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,mBAAYL,SAAZ;AADR;AAFkC,KAAnC,CAAL,CAMFM,IANE,CAMG,UAAAC,GAAG;AAAA,aAAItB,uBAAuB,CAACsB,GAAD,CAA3B;AAAA,KANN,EAOFD,IAPE,CAOG,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KAPN,EAQFF,IARE,CAQG,UAACjB,SAAD,EAAe;AAEjBS,MAAAA,QAAQ,CAACV,yBAAyB,CAACC,SAAD,CAA1B,CAAR;AACH,KAXE,EAYFoB,KAZE,CAYI,UAAAC,GAAG,EAAI;AACVZ,MAAAA,QAAQ,CAACN,uBAAuB,CAACkB,GAAD,CAAxB,CAAR;AACH,KAdE,CAAP;AAeH,GAjBiC;AAAA,CAA3B;AAmBP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACf,KAAD,EAAW;AAChC,SAAO;AACHN,IAAAA,IAAI,EAAEI,yBADH;AAEHE,IAAAA,KAAK,EAALA;AAFG,GAAP;AAIH,CALM","sourcesContent":["\nimport { API_BASE_URL } from '../config';\nimport { normalizeResponseErrors } from './utils';\nimport { bindActionCreators } from 'redux';\n\n\n///////////Fetch Questions\nexport const FETCH_USERQUESTIONS_SUCCESS = 'FETCH_USERQUESTIONS_SUCCESS';\nexport const fetchUserQuestionsSuccess = questions => ({\n    type: FETCH_USERQUESTIONS_SUCCESS,\n    questions\n});\n\nexport const FETCH_USERQUESTIONS_ERROR = 'FETCH_USERQUESTIONS_ERROR';\nexport const fetchUserQuestionsError = error => ({\n    type: FETCH_USERQUESTIONS_ERROR,\n    error\n});\nexport const SUBMIT_USERANSWER_SUCCESS = 'SUBMIT_USERANSWER_SUCCESS';\nexport const submitUserAnswerSuccess = guess => ({\n    type: SUBMIT_USERANSWER_SUCCESS,\n    guess\n})\n\nexport const fetchUserQuestions = () => (dispatch, getState) => {\n    const authToken = getState().authReducer.authToken;\n    return fetch(`${API_BASE_URL}/user/questions`, {\n        method: 'GET',\n        headers: {\n            Authorization: `Bearer ${authToken}`\n        }\n    })\n        .then(res => normalizeResponseErrors(res))\n        .then(res => res.json())\n        .then((questions) => {\n\n            dispatch(fetchUserQuestionsSuccess(questions))\n        })\n        .catch(err => {\n            dispatch(fetchUserQuestionsError(err));\n        });\n};\n\nexport const userGuess = (guess) => {\n    return {\n        type: SUBMIT_USERANSWER_SUCCESS,\n        guess\n    }\n} \n\n\n\n\n"]},"metadata":{},"sourceType":"module"}