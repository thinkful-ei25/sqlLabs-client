{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/src/components/frontofcard.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport requiresLogin from './requires-login';\nimport { userGuess, fetchUserQuestions } from '../actions/frontofcardactions';\nimport { guessDismount } from '../actions/backofcardactions';\nimport { Link } from 'react-router-dom';\nimport './frontofcard.css';\nexport var FrontOfCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FrontOfCard, _React$Component);\n\n  function FrontOfCard() {\n    _classCallCheck(this, FrontOfCard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FrontOfCard).apply(this, arguments));\n  }\n\n  _createClass(FrontOfCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch(fetchUserQuestions());\n    }\n  }, {\n    key: \"guessSubmit\",\n    value: function guessSubmit() {\n      var guess = this.refs.userguess.value;\n      this.props.dispatch(guessDismount());\n      return this.props.dispatch(userGuess(guess, this.props.history));\n    }\n  }, {\n    key: \"createFrontCard\",\n    value: function createFrontCard() {\n      var _this = this;\n\n      var currentQuestion = this.props.currentQuestion;\n      return React.createElement(\"div\", {\n        className: \"dashboard-layout\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"background-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"dashboard-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dashboard-background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dashboard-banner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"welcome-message-prompt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left-banner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"\\uD83D\\uDCD7 SQL Beginner!\")))), React.createElement(\"div\", {\n        className: \"dashboard-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"question-card-size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"question-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"card-question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"question-number-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Question:\"), React.createElement(\"p\", {\n        className: \"question-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, currentQuestion.userQuestion ? currentQuestion.userQuestion : 'Loading.......'), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"card-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"your-answer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Answer Your Best Guess\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"question-input-field\",\n        ref: \"userguess\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"position-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"guess-button\",\n        onClick: function onClick() {\n          return _this.guessSubmit();\n        },\n        type: \"input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Submit\"))))))));\n    }\n  }, {\n    key: \"rerender\",\n    value: function rerender() {\n      return React.createElement(\"div\", {\n        className: \"x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, this.createFrontCard());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.loading) {\n        return React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return this.rerender();\n      }\n    }\n  }]);\n\n  return FrontOfCard;\n}(React.Component); // user: test1\n// userquestions: [{question: 1 answer: 1 correct: 0 incorrect :0},\n// {question: 2 answer: 2 correct: 0 incorrect :0}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentQuestion: state.frontofcardReducer,\n    questionID: state.frontofcardReducer.userQuestionID\n  };\n};\n\nexport default withRouter(requiresLogin()(connect(mapStateToProps)(FrontOfCard))); // <div className=\"card with_shadow card_correct\">\n//     Your Guess: <input type=\"text\" ref=\"userguess\" required></input>\n//     <div>\n//         <button onClick={() => this.guessSubmit()} type=\"input\">Submit</button>\n//     </div>\n// </div>","map":{"version":3,"sources":["/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/src/components/frontofcard.js"],"names":["React","connect","withRouter","requiresLogin","userGuess","fetchUserQuestions","guessDismount","Link","FrontOfCard","props","dispatch","guess","refs","userguess","value","history","currentQuestion","userQuestion","guessSubmit","createFrontCard","loading","rerender","Component","mapStateToProps","state","frontofcardReducer","questionID","userQuestionID"],"mappings":"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","sourcesContent":["'use strict';\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport requiresLogin from './requires-login';\nimport { userGuess, fetchUserQuestions } from '../actions/frontofcardactions';\nimport { guessDismount } from '../actions/backofcardactions';\nimport { Link } from 'react-router-dom';\nimport './frontofcard.css';\n\nexport class FrontOfCard extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(fetchUserQuestions());\n  }\n  guessSubmit() {\n    const guess = this.refs.userguess.value;\n    this.props.dispatch(guessDismount());\n    return this.props.dispatch(userGuess(guess, this.props.history));\n  }\n  createFrontCard() {\n    const currentQuestion = this.props.currentQuestion;\n\n    return (\n      <div className=\"dashboard-layout\">\n        <div className=\"background-image\" />\n        {/* top part of dashboard */}\n        <div className=\"dashboard-top\">\n          {/* top bar of dashboard */}\n          <div className=\"dashboard-background\">\n            <div className=\"dashboard-banner\">\n              <div className=\"welcome-message-prompt\">\n                <div className=\"left-banner\">📗 SQL Beginner!</div>\n              </div>\n            </div>\n          </div>\n          {/* End of top bar of dashboard */}\n\n          <div className=\"dashboard-main\">\n            <div className=\"question-card-size\">\n              <div className=\"question-card\">\n                <div className=\"card-image\">\n                  {/* <div className=\"card-img-overlay\">\n                    <span className=\"question-num\">Question #1</span>\n                  </div> */}\n                </div>\n                <div className=\"card-question\">\n                    <h3 className=\"question-number-text\">Question:</h3>\n                  <p className=\"question-text\">\n                    {currentQuestion.userQuestion\n                      ? currentQuestion.userQuestion\n                      : 'Loading.......'}\n                  </p>\n                                <hr />\n                </div>\n                <div className=\"card-input\" >\n                    <p className=\"your-answer\">Answer Your Best Guess</p>\n                    <input type=\"text\" className=\"question-input-field\" ref=\"userguess\" required></input>\n                    <div className=\"position-button\">\n                        <button className=\"guess-button\" onClick={() => this.guessSubmit()} type=\"input\">Submit</button>\n                    </div>\n                </div>\n              </div>\n            </div>\n\n            {/* <div className=\"dashboard-box\">\n              <div className=\"title\">\n                <h1> 📗 SQL Beginner </h1>\n              </div>\n              <h3 className=\"level\">10 questions | Lifetime Score: 75%</h3>\n              <div className=\"about-cards\">\n                SQL Learning Labs is a platform made to test your knowledge of\n                SQL Bash commands, and to help you accelerate your learning.\n              </div>\n              <Link to=\"/frontofcard\">\n                <button>SQL Basics</button>\n              </Link>\n            </div> */}\n            {/* <div className=\"dashboard-box\">\n              <div className=\"title\">\n                <h1> 🔖 SQL Intermediate </h1>\n              </div>\n              <h3 className=\"level\">Coming Soon</h3>\n              <div className=\"about-cards\">\n                SQL Learning Labs is a platform made to test your knowledge of\n                SQL Bash commands, and to help you accelerate your learning.\n              </div>\n            </div> */}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  rerender() {\n    return <div className=\"x\">{this.createFrontCard()}</div>;\n  }\n\n  render() {\n    if (this.props.loading) {\n      return <h2>Loading...</h2>;\n    } else {\n      return this.rerender();\n    }\n  }\n}\n\n// user: test1\n// userquestions: [{question: 1 answer: 1 correct: 0 incorrect :0},\n// {question: 2 answer: 2 correct: 0 incorrect :0}\n\nconst mapStateToProps = state => {\n  return {\n    currentQuestion: state.frontofcardReducer,\n    questionID: state.frontofcardReducer.userQuestionID\n  };\n};\n\nexport default withRouter(\n  requiresLogin()(connect(mapStateToProps)(FrontOfCard))\n);\n\n// <div className=\"card with_shadow card_correct\">\n\n//     Your Guess: <input type=\"text\" ref=\"userguess\" required></input>\n//     <div>\n//         <button onClick={() => this.guessSubmit()} type=\"input\">Submit</button>\n//     </div>\n// </div>\n"]},"metadata":{},"sourceType":"module"}