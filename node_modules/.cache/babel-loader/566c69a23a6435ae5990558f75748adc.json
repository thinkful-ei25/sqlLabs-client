{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/src/components/backofcard.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport requiresLogin from './requires-login';\nimport { makeGuess } from // guessDismount\n'../actions/backofcardactions';\nexport var BackOfCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BackOfCard, _React$Component);\n\n  function BackOfCard() {\n    _classCallCheck(this, BackOfCard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BackOfCard).apply(this, arguments));\n  }\n\n  _createClass(BackOfCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch(makeGuess(this.props.userGuess, this.props.userQuestionID));\n    }\n  }, {\n    key: \"createBackOfCard\",\n    value: function createBackOfCard() {\n      var trueorfalse = this.props.trueorfalse;\n      var questionText = this.props.questionText;\n      var userGuess = this.props.userGuess;\n      var correctAnswer = this.props.correctAnswer;\n      var numCorrect = this.props.numCorrect;\n      var numIncorrect = this.props.numIncorrect;\n\n      if (trueorfalse) {\n        return (// <div className=\"dashboard-layout\">\n          //   <div className=\"background-image\" />\n          //   {/* top part of dashboard */}\n          //   <div className=\"dashboard-top\">\n          //     {/* top bar of dashboard */}\n          //     <div className=\"dashboard-background\">\n          //       <div className=\"dashboard-banner\">\n          //         <div className=\"welcome-message-prompt\">\n          //           <div className=\"left-banner\">ðŸ“— SQL Beginner!</div>\n          //         </div>\n          //       </div>\n          //     </div>\n          //     {/* End of top bar of dashboard */}\n          //     <div className=\"dashboard-main\">\n          //       <div className=\"question-card-size\">\n          //         <div className=\"question-card\">\n          //           <div className=\"card-image\">\n          //             {/* <div className=\"card-img-overlay\">\n          //             <span className=\"question-num\">Question #1</span>\n          //           </div> */}\n          //           </div>\n          //           <div className=\"card-question\">\n          //             <h3 className=\"question-number-text\">Question:</h3>\n          //             <p className=\"question-text\">\n          //               {currentQuestion.userQuestion\n          //                 ? currentQuestion.userQuestion\n          //                 : 'Loading.......'}\n          //             </p>\n          //             <hr />\n          //           </div>\n          //           <div className=\"card-input\" >\n          //             <p className=\"your-answer\">Answer Your Best Guess</p>\n          //             <input type=\"text\" className=\"question-input-field\" ref=\"userguess\" required></input>\n          //             <div className=\"position-button\">\n          //               <button className=\"guess-button\" onClick={() => this.guessSubmit()} type=\"input\">Submit</button>\n          //             </div>\n          //           </div>\n          //         </div>\n          //       </div>\n          //     </div>\n          //   </div>\n          // </div>\n          React.createElement(\"div\", {\n            className: \"card with_shadow card_correct\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"arrow_box\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, questionText), React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, \"CORRECT!\"), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, \"Correct Answer: \", correctAnswer), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }, \"Your guess: \", userGuess), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, \"Your lifetime score on this question is:\"), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, \"Number of times Correct: \", numCorrect), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, \"Number of times Incorrect: \", numIncorrect)), React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, \"Keep up the great work!\"), React.createElement(Link, {\n            to: \"/frontofcard\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, \"Next Question\"))))\n        );\n      } else {\n        return React.createElement(\"div\", {\n          className: \"card with_shadow card_incorrect\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"arrow_box\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, questionText), React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"Wrong....\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \"Correct Answer: \", correctAnswer), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, \"Your guess: \", userGuess), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, \"Your lifetime score on this question is:\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, \"Number of times Correct: \", numCorrect), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, \"Number of times Incorrect: \", numIncorrect)), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, \"Keep up the great work!\"), React.createElement(Link, {\n          to: \"/frontofcard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, \"Next Question\"))));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"dashboard-layout\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"background-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"dashboard-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dashboard-background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dashboard-banner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"welcome-message-prompt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left-banner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"\\uD83D\\uDCD7 SQL Beginner!\")))), React.createElement(\"div\", {\n        className: \"dashboard-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"question-card-size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"question-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, this.createBackOfCard()))))));\n    }\n  }]);\n\n  return BackOfCard;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  return {\n    questionText: state.backofcardReducer.response ? state.backofcardReducer.response.questionText : '',\n    userQuestionID: state.frontofcardReducer.userQuestionID,\n    userGuess: state.frontofcardReducer.userAnswer,\n    correctAnswer: state.backofcardReducer.response ? state.backofcardReducer.response.questionAnswer : '',\n    trueorfalse: state.backofcardReducer.response ? state.backofcardReducer.response.correct : null,\n    numCorrect: state.backofcardReducer.response ? state.backofcardReducer.response.numCorrect : '',\n    numIncorrect: state.backofcardReducer.response ? state.backofcardReducer.response.numIncorrect : ''\n  };\n};\n\nexport default requiresLogin()(connect(mapStateToProps)(BackOfCard));","map":{"version":3,"sources":["/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/src/components/backofcard.js"],"names":["React","connect","Link","requiresLogin","makeGuess","BackOfCard","props","dispatch","userGuess","userQuestionID","trueorfalse","questionText","correctAnswer","numCorrect","numIncorrect","createBackOfCard","Component","mapStateToProps","state","backofcardReducer","response","frontofcardReducer","userAnswer","questionAnswer","correct"],"mappings":"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","sourcesContent":["'use strict';\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport requiresLogin from './requires-login';\nimport { makeGuess, \n  // guessDismount\n } from '../actions/backofcardactions'\n\n\n\nexport class BackOfCard extends React.Component {\n  componentDidMount() {\n \n    this.props.dispatch(makeGuess(this.props.userGuess, this.props.userQuestionID));\n\n  }\n\n  createBackOfCard() { \n    const trueorfalse = this.props.trueorfalse;\n    const questionText = this.props.questionText;\n    const userGuess = this.props.userGuess;\n    const correctAnswer = this.props.correctAnswer;\n    const numCorrect = this.props.numCorrect;\n    const numIncorrect = this.props.numIncorrect\n    \n    if (trueorfalse) {\n      return (\n        // <div className=\"dashboard-layout\">\n        //   <div className=\"background-image\" />\n        //   {/* top part of dashboard */}\n        //   <div className=\"dashboard-top\">\n        //     {/* top bar of dashboard */}\n        //     <div className=\"dashboard-background\">\n        //       <div className=\"dashboard-banner\">\n        //         <div className=\"welcome-message-prompt\">\n        //           <div className=\"left-banner\">ðŸ“— SQL Beginner!</div>\n        //         </div>\n        //       </div>\n        //     </div>\n        //     {/* End of top bar of dashboard */}\n\n        //     <div className=\"dashboard-main\">\n        //       <div className=\"question-card-size\">\n        //         <div className=\"question-card\">\n        //           <div className=\"card-image\">\n        //             {/* <div className=\"card-img-overlay\">\n        //             <span className=\"question-num\">Question #1</span>\n        //           </div> */}\n        //           </div>\n        //           <div className=\"card-question\">\n        //             <h3 className=\"question-number-text\">Question:</h3>\n        //             <p className=\"question-text\">\n        //               {currentQuestion.userQuestion\n        //                 ? currentQuestion.userQuestion\n        //                 : 'Loading.......'}\n        //             </p>\n        //             <hr />\n        //           </div>\n        //           <div className=\"card-input\" >\n        //             <p className=\"your-answer\">Answer Your Best Guess</p>\n        //             <input type=\"text\" className=\"question-input-field\" ref=\"userguess\" required></input>\n        //             <div className=\"position-button\">\n        //               <button className=\"guess-button\" onClick={() => this.guessSubmit()} type=\"input\">Submit</button>\n        //             </div>\n        //           </div>\n        //         </div>\n        //       </div>\n        //     </div>\n        //   </div>\n        // </div>\n\n\n\n\n        <div className=\"card with_shadow card_correct\">\n          <div className=\"arrow_box\">\n            <h1>{questionText}</h1>\n            <h2>CORRECT!</h2>\n            <p>Correct Answer: {correctAnswer}</p>\n            <p>Your guess: {userGuess}</p>\n            <p></p>\n            <p>Your lifetime score on this question is:</p>\n            <p>Number of times Correct: {numCorrect}</p>\n            <p>Number of times Incorrect: {numIncorrect}</p>\n          </div>\n          <div>\n            <p>Keep up the great work!</p>\n            <Link to=\"/frontofcard\"><button>Next Question</button></Link>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"card with_shadow card_incorrect\">\n          <div className=\"arrow_box\">\n            <h1>{questionText}</h1>\n            <h2>Wrong....</h2>\n            <p>Correct Answer: {correctAnswer}</p>\n            <p>Your guess: {userGuess}</p>\n            <p>Your lifetime score on this question is:</p>\n            <p>Number of times Correct: {numCorrect}</p>\n            <p>Number of times Incorrect: {numIncorrect}</p>\n          </div>\n          <div>\n            <p>Keep up the great work!</p>\n            <Link to=\"/frontofcard\"><button>Next Question</button></Link>\n          </div>\n        </div>\n      )\n    }\n\n  }\n\n  \n  render() {\n\n    return (\n      <div className=\"dashboard-layout\">\n        <div className=\"background-image\" />\n        {/* top part of dashboard */}\n        <div className=\"dashboard-top\">\n          {/* top bar of dashboard */}\n          <div className=\"dashboard-background\">\n            <div className=\"dashboard-banner\">\n              <div className=\"welcome-message-prompt\">\n                <div className=\"left-banner\">ðŸ“— SQL Beginner!</div>\n              </div>\n            </div>\n          </div>\n          {/* End of top bar of dashboard */}\n\n          <div className=\"dashboard-main\">\n            <div className=\"question-card-size\">\n              <div className=\"question-card\">\n                <div className=\"x\">{this.createBackOfCard()}</div>\n\n                \n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    \n    );\n  }\n\n}\n\nconst mapStateToProps = (state, props) => {\n  return ({\n    questionText : (state.backofcardReducer.response)?state.backofcardReducer.response.questionText:'',\n    userQuestionID : state.frontofcardReducer.userQuestionID,\n    userGuess : state.frontofcardReducer.userAnswer,\n    correctAnswer : (state.backofcardReducer.response)?state.backofcardReducer.response.questionAnswer:'',\n    trueorfalse : (state.backofcardReducer.response)?state.backofcardReducer.response.correct:null,\n    numCorrect : (state.backofcardReducer.response)?state.backofcardReducer.response.numCorrect:'',\n    numIncorrect : (state.backofcardReducer.response)?state.backofcardReducer.response.numIncorrect:''\n\n  });\n};\n\nexport default requiresLogin()(connect(mapStateToProps)(BackOfCard));\n\n\n"]},"metadata":{},"sourceType":"module"}