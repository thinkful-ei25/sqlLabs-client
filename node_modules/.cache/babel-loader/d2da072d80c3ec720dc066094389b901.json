{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/src/components/frontofcard.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport requiresLogin from './requires-login';\nimport { userGuess, fetchUserQuestions } from '../actions/frontofcardactions';\nimport { guessDismount } from '../actions/backofcardactions';\nexport var FrontOfCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FrontOfCard, _React$Component);\n\n  function FrontOfCard() {\n    _classCallCheck(this, FrontOfCard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FrontOfCard).apply(this, arguments));\n  }\n\n  _createClass(FrontOfCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch(fetchUserQuestions());\n    }\n  }, {\n    key: \"guessSubmit\",\n    value: function guessSubmit() {\n      var guess = this.refs.userguess.value;\n      this.props.dispatch(guessDismount());\n      return this.props.dispatch(userGuess(guess, this.props.history));\n    }\n  }, {\n    key: \"createFrontCard\",\n    value: function createFrontCard() {\n      var _this = this;\n\n      var currentQuestion = this.props.currentQuestion;\n      return React.createElement(\"div\", {\n        className: \"card with_shadow card_correct\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"arrow_box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"SQL Question\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, currentQuestion.userQuestion ? currentQuestion.userQuestion : 'Loading.......')), \"Your Guess: \", React.createElement(\"input\", {\n        type: \"text\",\n        ref: \"userguess\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this.guessSubmit();\n        },\n        type: \"input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }, {\n    key: \"rerender\",\n    value: function rerender() {\n      return React.createElement(\"div\", {\n        className: \"x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.createFrontCard());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.loading) {\n        return React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return this.rerender();\n      }\n    }\n  }]);\n\n  return FrontOfCard;\n}(React.Component); // user: test1\n// userquestions: [{question: 1 answer: 1 correct: 0 incorrect :0},\n// {question: 2 answer: 2 correct: 0 incorrect :0}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentQuestion: state.frontofcardReducer,\n    questionID: state.frontofcardReducer.userQuestionID\n  };\n};\n\nexport default withRouter(requiresLogin()(connect(mapStateToProps)(FrontOfCard)));","map":{"version":3,"sources":["/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/src/components/frontofcard.js"],"names":["React","connect","withRouter","requiresLogin","userGuess","fetchUserQuestions","guessDismount","FrontOfCard","props","dispatch","guess","refs","userguess","value","history","currentQuestion","userQuestion","guessSubmit","createFrontCard","loading","rerender","Component","mapStateToProps","state","frontofcardReducer","questionID","userQuestionID"],"mappings":"AAAA;;;;;;;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,SAASC,SAAT,EAAoBC,kBAApB,QAA8C,+BAA9C;AACA,SAASC,aAAT,QAA8B,8BAA9B;AAGA,WAAaC,WAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,wCACwB;AAEhB,WAAKC,KAAL,CAAWC,QAAX,CAAoBJ,kBAAkB,EAAtC;AACH;AAJL;AAAA;AAAA,kCAKkB;AACV,UAAMK,KAAK,GAAG,KAAKC,IAAL,CAAUC,SAAV,CAAoBC,KAAlC;AACA,WAAKL,KAAL,CAAWC,QAAX,CAAoBH,aAAa,EAAjC;AACA,aAAO,KAAKE,KAAL,CAAWC,QAAX,CAAoBL,SAAS,CAACM,KAAD,EAAQ,KAAKF,KAAL,CAAWM,OAAnB,CAA7B,CAAP;AACH;AATL;AAAA;AAAA,sCAUsB;AAAA;;AAEd,UAAMC,eAAe,GAAG,KAAKP,KAAL,CAAWO,eAAnC;AAEA,aAEI;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,eAAe,CAACC,YAAhB,GAA+BD,eAAe,CAACC,YAA/C,GAA8D,gBAAlE,CAFJ,CADJ,kBAKgB;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,GAAG,EAAC,WAAvB;AAAmC,QAAA,QAAQ,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALhB,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACC,WAAL,EAAN;AAAA,SAAjB;AAA2C,QAAA,IAAI,EAAC,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CANJ,CAFJ;AAaH;AA3BL;AAAA;AAAA,+BA8Be;AACP,aAAO;AAAK,QAAA,SAAS,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoB,KAAKC,eAAL,EAApB,CAAP;AACH;AAhCL;AAAA;AAAA,6BAkCa;AACL,UAAI,KAAKV,KAAL,CAAWW,OAAf,EAAwB;AACpB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACH,OAFD,MAEO;AACH,eAAO,KAAKC,QAAL,EAAP;AACH;AACJ;AAxCL;;AAAA;AAAA,EAAiCpB,KAAK,CAACqB,SAAvC,E,CA2CA;AACA;AACA;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAQ;AACJR,IAAAA,eAAe,EAAEQ,KAAK,CAACC,kBADnB;AAEJC,IAAAA,UAAU,EAAEF,KAAK,CAACC,kBAAN,CAAyBE;AAFjC,GAAR;AAIH,CALD;;AAOA,eAAexB,UAAU,CAACC,aAAa,GAAGF,OAAO,CAACqB,eAAD,CAAP,CAAyBf,WAAzB,CAAH,CAAd,CAAzB","sourcesContent":["'use strict';\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport requiresLogin from './requires-login';\nimport { userGuess, fetchUserQuestions } from '../actions/frontofcardactions';\nimport { guessDismount } from '../actions/backofcardactions';\n\n\nexport class FrontOfCard extends React.Component {\n    componentDidMount() {\n\n        this.props.dispatch(fetchUserQuestions());\n    }\n    guessSubmit() {\n        const guess = this.refs.userguess.value;\n        this.props.dispatch(guessDismount())\n        return this.props.dispatch(userGuess(guess, this.props.history))\n    }\n    createFrontCard() {\n\n        const currentQuestion = this.props.currentQuestion;\n\n        return (\n\n            <div className=\"card with_shadow card_correct\">\n                <div className=\"arrow_box\">\n                    <h2>SQL Question</h2>\n                    <p>{currentQuestion.userQuestion ? currentQuestion.userQuestion : 'Loading.......'}</p>\n                </div>\n                Your Guess: <input type=\"text\" ref=\"userguess\" required></input>\n                <div>\n                    <button onClick={() => this.guessSubmit()} type=\"input\">Submit</button>\n                </div>\n            </div>\n        )\n    }\n\n\n    rerender() {\n        return <div className=\"x\">{this.createFrontCard()}</div>\n    }\n\n    render() {\n        if (this.props.loading) {\n            return <h2>Loading...</h2>\n        } else {\n            return this.rerender();\n        }\n    }\n}\n\n// user: test1\n// userquestions: [{question: 1 answer: 1 correct: 0 incorrect :0},\n// {question: 2 answer: 2 correct: 0 incorrect :0}\n\nconst mapStateToProps = (state) => {\n    return ({\n        currentQuestion: state.frontofcardReducer,\n        questionID: state.frontofcardReducer.userQuestionID,\n    });\n};\n\nexport default withRouter(requiresLogin()(connect(mapStateToProps)(FrontOfCard)));"]},"metadata":{},"sourceType":"module"}