{"ast":null,"code":"import _classCallCheck from \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/src/components/app.js\";\nimport React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, withRouter } from 'react-router-dom';\nimport '../index.css';\nimport HeaderBar from './header-bar';\nimport LandingPage from './landing-page';\nimport Dashboard from './dashboard';\nimport SignupPage from './signup-page';\nimport LoginPage from './login-page';\nimport FrontOfCard from './frontofcard';\nimport BackOfCard from './backofcard';\nimport { refreshAuthToken } from '../actions/auth';\nexport var App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (!prevProps.loggedIn && this.props.loggedIn) {\n        // When we are logged in, refresh the auth token periodically\n        this.startPeriodicRefresh();\n      } else if (prevProps.loggedIn && !this.props.loggedIn) {\n        // Stop refreshing when we log out\n        this.stopPeriodicRefresh();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.stopPeriodicRefresh();\n    }\n  }, {\n    key: \"startPeriodicRefresh\",\n    value: function startPeriodicRefresh() {\n      var _this = this;\n\n      this.refreshInterval = setInterval(function () {\n        return _this.props.dispatch(refreshAuthToken());\n      }, 60 * 60 * 1000 // One hour\n      );\n    }\n  }, {\n    key: \"stopPeriodicRefresh\",\n    value: function stopPeriodicRefresh() {\n      if (!this.refreshInterval) {\n        return;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(HeaderBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"layout\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: LandingPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/login\",\n        component: LoginPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/dashboard\",\n        component: Dashboard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/sign-up\",\n        component: SignupPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/frontofcard\",\n        component: FrontOfCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/backofcard\",\n        component: BackOfCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    hasAuthToken: state.authReducer.authToken !== null,\n    loggedIn: state.authReducer.currentUser !== null\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(App));","map":{"version":3,"sources":["/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/src/components/app.js"],"names":["React","Fragment","connect","Route","withRouter","HeaderBar","LandingPage","Dashboard","SignupPage","LoginPage","FrontOfCard","BackOfCard","refreshAuthToken","App","prevProps","loggedIn","props","startPeriodicRefresh","stopPeriodicRefresh","refreshInterval","setInterval","dispatch","Component","mapStateToProps","state","hasAuthToken","authReducer","authToken","currentUser"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, withRouter } from 'react-router-dom';\nimport '../index.css';\nimport HeaderBar from './header-bar';\nimport LandingPage from './landing-page';\nimport Dashboard from './dashboard';\nimport SignupPage from './signup-page';\nimport LoginPage from './login-page';\nimport FrontOfCard from './frontofcard';\nimport BackOfCard from './backofcard';\n\nimport { refreshAuthToken } from '../actions/auth';\n\nexport class App extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (!prevProps.loggedIn && this.props.loggedIn) {\n      // When we are logged in, refresh the auth token periodically\n      this.startPeriodicRefresh();\n    } else if (prevProps.loggedIn && !this.props.loggedIn) {\n      // Stop refreshing when we log out\n      this.stopPeriodicRefresh();\n    }\n  }\n\n  componentWillUnmount() {\n    this.stopPeriodicRefresh();\n  }\n\n  startPeriodicRefresh() {\n    this.refreshInterval = setInterval(\n      () => this.props.dispatch(refreshAuthToken()),\n      60 * 60 * 1000 // One hour\n    );\n  }\n\n  stopPeriodicRefresh() {\n    if (!this.refreshInterval) {\n      return;\n    }\n  }\n\n  render() {\n    return (\n\n      <div className=\"wrapper\">\n            <HeaderBar />\n        <div className=\"layout\">\n          <Route exact path=\"/\" component={LandingPage} />\n          <Route exact path=\"/login\" component={LoginPage} />\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/sign-up\" component={SignupPage} />\n          <Route exact path=\"/frontofcard\" component={FrontOfCard} />\n          <Route exact path=\"/backofcard\" component={BackOfCard} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  hasAuthToken: state.authReducer.authToken !== null,\n  loggedIn: state.authReducer.currentUser !== null\n});\n\nexport default withRouter(connect(mapStateToProps)(App));\n"]},"metadata":{},"sourceType":"module"}