{"ast":null,"code":"import _classCallCheck from \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/src/components/signup-form.js\";\nimport React from 'react';\nimport { Field, reduxForm, focus } from 'redux-form';\nimport { registerUser } from '../actions/users';\nimport { login } from '../actions/auth';\nimport Input from './input';\nimport './form.css';\nimport { required, nonEmpty, matches, length, isTrimmed } from '../validators';\nvar passwordLength = length({\n  min: 10,\n  max: 72\n});\nvar matchesPassword = matches('password');\nexport var SignupForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SignupForm, _React$Component);\n\n  function SignupForm() {\n    _classCallCheck(this, SignupForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SignupForm).apply(this, arguments));\n  }\n\n  _createClass(SignupForm, [{\n    key: \"onSubmit\",\n    value: function onSubmit(values) {\n      var _this = this;\n\n      var username = values.username,\n          password = values.password,\n          firstName = values.firstName,\n          lastName = values.lastName;\n      var user = {\n        username: username,\n        password: password,\n        firstName: firstName,\n        lastName: lastName\n      };\n      return this.props.dispatch(registerUser(user)).then(function () {\n        return _this.props.dispatch(login(username, password));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"form\", {\n        className: \"sign-up\",\n        onSubmit: this.props.handleSubmit(function (values) {\n          return _this2.onSubmit(values);\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"form-label\",\n        htmlFor: \"firstName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"First name\"), React.createElement(Field, {\n        component: Input,\n        type: \"text\",\n        name: \"firstName\",\n        className: \"input-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"form-label\",\n        htmlFor: \"lastName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Last name\"), React.createElement(Field, {\n        component: Input,\n        type: \"text\",\n        name: \"lastName\",\n        className: \"input-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"form-label\",\n        htmlFor: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Username\"), React.createElement(Field, {\n        component: Input,\n        className: \"input-field\",\n        type: \"text\",\n        name: \"username\",\n        validate: [required, nonEmpty, isTrimmed],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"form-label\",\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Field, {\n        component: Input,\n        type: \"password\",\n        name: \"password\",\n        className: \"input-field\",\n        validate: [required, passwordLength, isTrimmed],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"form-label\",\n        htmlFor: \"passwordConfirm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Confirm password\"), React.createElement(Field, {\n        component: Input,\n        type: \"password\",\n        name: \"passwordConfirm\",\n        className: \"input-field\",\n        validate: [required, nonEmpty, matchesPassword],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"form-button\",\n        type: \"submit\",\n        disabled: this.props.pristine || this.props.submitting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Sign Up\"));\n    }\n  }]);\n\n  return SignupForm;\n}(React.Component);\nexport default reduxForm({\n  form: 'signup',\n  onSubmitFail: function onSubmitFail(errors, dispatch) {\n    return dispatch(focus('signup', Object.keys(errors)[0]));\n  }\n})(SignupForm);","map":{"version":3,"sources":["/Users/bradyfox/projects/thinkful/SQL-Labs-Mary-Brady-client/src/components/signup-form.js"],"names":["React","Field","reduxForm","focus","registerUser","login","Input","required","nonEmpty","matches","length","isTrimmed","passwordLength","min","max","matchesPassword","SignupForm","values","username","password","firstName","lastName","user","props","dispatch","then","handleSubmit","onSubmit","pristine","submitting","Component","form","onSubmitFail","errors","Object","keys"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Field, reduxForm, focus } from 'redux-form';\nimport { registerUser } from '../actions/users';\nimport { login } from '../actions/auth';\nimport Input from './input';\nimport './form.css';\nimport { required, nonEmpty, matches, length, isTrimmed } from '../validators';\nconst passwordLength = length({ min: 10, max: 72 });\nconst matchesPassword = matches('password');\n\nexport class SignupForm extends React.Component {\n  onSubmit(values) {\n    const { username, password, firstName, lastName } = values;\n    const user = { username, password, firstName, lastName };\n    return this.props\n      .dispatch(registerUser(user))\n      .then(() => this.props.dispatch(login(username, password)));\n  }\n\n  render() {\n    return (\n      <form\n        className=\"sign-up\"\n        onSubmit={this.props.handleSubmit(values => this.onSubmit(values))}\n      >\n        <label className=\"form-label\" htmlFor=\"firstName\">\n          First name\n        </label>\n        <Field\n          component={Input}\n          type=\"text\"\n          name=\"firstName\"\n          className=\"input-field\"\n        />\n        <label className=\"form-label\" htmlFor=\"lastName\">\n          Last name\n        </label>\n        <Field\n          component={Input}\n          type=\"text\"\n          name=\"lastName\"\n          className=\"input-field\"\n        />\n        <label className=\"form-label\" htmlFor=\"username\">\n          Username\n        </label>\n        <Field\n          component={Input}\n          className=\"input-field\"\n          type=\"text\"\n          name=\"username\"\n          validate={[required, nonEmpty, isTrimmed]}\n        />\n        <label className=\"form-label\" htmlFor=\"password\">\n          Password\n        </label>\n        <Field\n          component={Input}\n          type=\"password\"\n          name=\"password\"\n          className=\"input-field\"\n          validate={[required, passwordLength, isTrimmed]}\n        />\n        <label className=\"form-label\" htmlFor=\"passwordConfirm\">\n          Confirm password\n        </label>\n        <Field\n          component={Input}\n          type=\"password\"\n          name=\"passwordConfirm\"\n          className=\"input-field\"\n          validate={[required, nonEmpty, matchesPassword]}\n        />\n        <button\n          className=\"form-button\"\n          type=\"submit\"\n          disabled={this.props.pristine || this.props.submitting}\n        >\n          Sign Up\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default reduxForm({\n  form: 'signup',\n  onSubmitFail: (errors, dispatch) =>\n    dispatch(focus('signup', Object.keys(errors)[0]))\n})(SignupForm);\n"]},"metadata":{},"sourceType":"module"}