{"ast":null,"code":"import { API_BASE_URL } from '../config';\nimport { normalizeResponseErrors } from './utils';\nimport { bindActionCreators } from 'redux';\nexport var MAKE_GUESS_SUCCESS = 'MAKE_GUESS_SUCCESS';\nexport var makeGuessSuccess = function makeGuessSuccess(guess) {\n  return {\n    type: MAKE_GUESS_SUCCESS,\n    guess: guess\n  };\n};\nexport var makeGuess = function makeGuess(guess, questionId) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: GUESS_DISMOUNT\n    });\n    var authToken = getState().authReducer.authToken;\n    return fetch(\"\".concat(API_BASE_URL, \"/question\"), {\n      method: 'POST',\n      headers: {\n        'Authorization': \"Bearer \".concat(authToken),\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userAnswer: guess,\n        questionId: questionId\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      dispatch(makeGuessSuccess(json));\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n};\nexport var GUESS_DISMOUNT = 'GUESS_DISMOUNT';\nexport var guessDismount = function guessDismount() {\n  return {\n    type: GUESS_DISMOUNT\n  };\n};","map":{"version":3,"sources":["/Users/mkcnly/spacedrep/sql-labs-client/src/actions/backofcardactions.js"],"names":["API_BASE_URL","normalizeResponseErrors","bindActionCreators","MAKE_GUESS_SUCCESS","makeGuessSuccess","guess","type","makeGuess","questionId","dispatch","getState","GUESS_DISMOUNT","authToken","authReducer","fetch","method","headers","body","JSON","stringify","userAnswer","then","res","json","catch","error","console","log","guessDismount"],"mappings":"AACA,SAASA,YAAT,QAA6B,WAA7B;AACA,SAASC,uBAAT,QAAwC,SAAxC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AAEA,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD;AAAA,SAAY;AACxCC,IAAAA,IAAI,EAAEH,kBADkC;AAExCE,IAAAA,KAAK,EAALA;AAFwC,GAAZ;AAAA,CAAzB;AAKP,OAAO,IAAME,SAAS,GAAG,SAAZA,SAAY,CAACF,KAAD,EAAQG,UAAR,EAAuB;AAE5C,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLH,MAAAA,IAAI,EAAEK;AADD,KAAD,CAAR;AAGA,QAAMC,SAAS,GAAGF,QAAQ,GAAGG,WAAX,CAAuBD,SAAzC;AACA,WAAOE,KAAK,WAAId,YAAJ,gBAA6B;AACrCe,MAAAA,MAAM,EAAE,MAD6B;AAErCC,MAAAA,OAAO,EAAE;AACL,0CAA2BJ,SAA3B,CADK;AAEL,kBAAU,kBAFL;AAGL,wBAAgB;AAHX,OAF4B;AAOrCK,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,UAAU,EAAEf,KADK;AAEjBG,QAAAA,UAAU,EAAVA;AAFiB,OAAf;AAP+B,KAA7B,CAAL,CAYFa,IAZE,CAYG,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KAZN,EAaFF,IAbE,CAaG,UAAAE,IAAI,EACN;AACAd,MAAAA,QAAQ,CAACL,gBAAgB,CAACmB,IAAD,CAAjB,CAAR;AAAiC,KAflC,EAgBFC,KAhBE,CAgBI,UAAAC,KAAK;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,KAhBT,CAAP;AAiBH,GAtBD;AAuBH,CAzBM;AA0BP,OAAO,IAAMd,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMiB,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC/B,SAAO;AACHtB,IAAAA,IAAI,EAAEK;AADH,GAAP;AAGH,CAJM","sourcesContent":["\nimport { API_BASE_URL } from '../config';\nimport { normalizeResponseErrors } from './utils';\nimport { bindActionCreators } from 'redux';\n\nexport const MAKE_GUESS_SUCCESS = 'MAKE_GUESS_SUCCESS';\nexport const makeGuessSuccess = (guess) => ({\n    type: MAKE_GUESS_SUCCESS,\n    guess\n})\n\nexport const makeGuess = (guess, questionId) => {\n    \n    return (dispatch, getState) => {\n        dispatch({\n            type: GUESS_DISMOUNT\n        })\n        const authToken = getState().authReducer.authToken;\n        return fetch(`${API_BASE_URL}/question`, {\n            method: 'POST',\n            headers: {\n                'Authorization': `Bearer ${authToken}`,\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                userAnswer: guess,\n                questionId\n            })\n        })\n            .then(res => res.json())\n            .then(json => \n                {\n                dispatch(makeGuessSuccess(json))})\n            .catch(error => console.log(error))\n    }\n}\nexport const GUESS_DISMOUNT = 'GUESS_DISMOUNT';\nexport const guessDismount = () => {\n    return {\n        type: GUESS_DISMOUNT,\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}