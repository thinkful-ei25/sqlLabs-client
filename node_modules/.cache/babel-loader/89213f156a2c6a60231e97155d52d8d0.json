{"ast":null,"code":"import { API_BASE_URL } from '../config';\nimport { normalizeResponseErrors } from './utils';\nimport { bindActionCreators } from 'redux'; ///////////Fetch Questions\n\nexport var FETCH_USERQUESTIONS_SUCCESS = 'FETCH_USERQUESTIONS_SUCCESS';\nexport var fetchUserQuestionsSuccess = function fetchUserQuestionsSuccess(question) {\n  return {\n    type: FETCH_USERQUESTIONS_SUCCESS,\n    question: question\n  };\n};\nexport var FETCH_USERQUESTIONS_ERROR = 'FETCH_USERQUESTIONS_ERROR';\nexport var fetchUserQuestionsError = function fetchUserQuestionsError(error) {\n  return {\n    type: FETCH_USERQUESTIONS_ERROR,\n    error: error\n  };\n};\nexport var SUBMIT_USERANSWER_SUCCESS = 'SUBMIT_USERANSWER_SUCCESS';\nexport var submitUserAnswerSuccess = function submitUserAnswerSuccess(guess) {\n  return {\n    type: SUBMIT_USERANSWER_SUCCESS,\n    guess: guess\n  };\n};\nexport var fetchUserQuestions = function fetchUserQuestions() {\n  return function (dispatch, getState) {\n    console.log('actions 26', getState().authReducer);\n    var authToken = getState().authReducer.authToken;\n    return fetch(\"\".concat(API_BASE_URL, \"/question\"), {\n      method: 'GET',\n      headers: {\n        Authorization: \"Bearer \".concat(authToken)\n      }\n    }).then(function (res) {\n      return normalizeResponseErrors(res);\n    }).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      console.log('actions 36', res);\n      dispatch(fetchUserQuestionsSuccess(res.userQuestion));\n    }).catch(function (err) {\n      dispatch(fetchUserQuestionsError(err));\n    });\n  };\n};\nexport var userGuess = function userGuess(guess) {\n  return {\n    type: SUBMIT_USERANSWER_SUCCESS,\n    guess: guess\n  };\n};","map":{"version":3,"sources":["/Users/mkcnly/spacedrep/sql-labs-client/src/actions/frontofcardactions.js"],"names":["API_BASE_URL","normalizeResponseErrors","bindActionCreators","FETCH_USERQUESTIONS_SUCCESS","fetchUserQuestionsSuccess","question","type","FETCH_USERQUESTIONS_ERROR","fetchUserQuestionsError","error","SUBMIT_USERANSWER_SUCCESS","submitUserAnswerSuccess","guess","fetchUserQuestions","dispatch","getState","console","log","authReducer","authToken","fetch","method","headers","Authorization","then","res","json","userQuestion","catch","err","userGuess"],"mappings":"AACA,SAASA,YAAT,QAA6B,WAA7B;AACA,SAASC,uBAAT,QAAwC,SAAxC;AACA,SAASC,kBAAT,QAAmC,OAAnC,C,CAGA;;AACA,OAAO,IAAMC,2BAA2B,GAAG,6BAApC;AACP,OAAO,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAAC,QAAQ;AAAA,SAAK;AAClDC,IAAAA,IAAI,EAAEH,2BAD4C;AAElDE,IAAAA,QAAQ,EAARA;AAFkD,GAAL;AAAA,CAA1C;AAKP,OAAO,IAAME,yBAAyB,GAAG,2BAAlC;AACP,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAC,KAAK;AAAA,SAAK;AAC7CH,IAAAA,IAAI,EAAEC,yBADuC;AAE7CE,IAAAA,KAAK,EAALA;AAF6C,GAAL;AAAA,CAArC;AAIP,OAAO,IAAMC,yBAAyB,GAAG,2BAAlC;AACP,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAC,KAAK;AAAA,SAAK;AAC7CN,IAAAA,IAAI,EAAEI,yBADuC;AAE7CE,IAAAA,KAAK,EAALA;AAF6C,GAAL;AAAA,CAArC;AAKP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,SAAM,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC5DC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,QAAQ,GAAGG,WAArC;AACA,QAAMC,SAAS,GAAGJ,QAAQ,GAAGG,WAAX,CAAuBC,SAAzC;AACA,WAAOC,KAAK,WAAIpB,YAAJ,gBAA6B;AACrCqB,MAAAA,MAAM,EAAE,KAD6B;AAErCC,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,mBAAYJ,SAAZ;AADR;AAF4B,KAA7B,CAAL,CAMFK,IANE,CAMG,UAAAC,GAAG;AAAA,aAAIxB,uBAAuB,CAACwB,GAAD,CAA3B;AAAA,KANN,EAOFD,IAPE,CAOG,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KAPN,EAQFF,IARE,CAQG,UAACC,GAAD,EAAS;AACvBT,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BQ,GAA1B;AACYX,MAAAA,QAAQ,CAACV,yBAAyB,CAACqB,GAAG,CAACE,YAAL,CAA1B,CAAR;AACH,KAXE,EAYFC,KAZE,CAYI,UAAAC,GAAG,EAAI;AACVf,MAAAA,QAAQ,CAACN,uBAAuB,CAACqB,GAAD,CAAxB,CAAR;AACH,KAdE,CAAP;AAeH,GAlBiC;AAAA,CAA3B;AAoBP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAClB,KAAD,EAAW;AAChC,SAAO;AACHN,IAAAA,IAAI,EAAEI,yBADH;AAEHE,IAAAA,KAAK,EAALA;AAFG,GAAP;AAIH,CALM","sourcesContent":["\nimport { API_BASE_URL } from '../config';\nimport { normalizeResponseErrors } from './utils';\nimport { bindActionCreators } from 'redux';\n\n\n///////////Fetch Questions\nexport const FETCH_USERQUESTIONS_SUCCESS = 'FETCH_USERQUESTIONS_SUCCESS';\nexport const fetchUserQuestionsSuccess = question => ({\n    type: FETCH_USERQUESTIONS_SUCCESS,\n    question\n});\n\nexport const FETCH_USERQUESTIONS_ERROR = 'FETCH_USERQUESTIONS_ERROR';\nexport const fetchUserQuestionsError = error => ({\n    type: FETCH_USERQUESTIONS_ERROR,\n    error\n});\nexport const SUBMIT_USERANSWER_SUCCESS = 'SUBMIT_USERANSWER_SUCCESS';\nexport const submitUserAnswerSuccess = guess => ({\n    type: SUBMIT_USERANSWER_SUCCESS,\n    guess\n})\n\nexport const fetchUserQuestions = () => (dispatch, getState) => {\n    console.log('actions 26', getState().authReducer)\n    const authToken = getState().authReducer.authToken;\n    return fetch(`${API_BASE_URL}/question`, {\n        method: 'GET',\n        headers: {\n            Authorization: `Bearer ${authToken}`\n        }\n    })\n        .then(res => normalizeResponseErrors(res))\n        .then(res => res.json())\n        .then((res) => {\nconsole.log('actions 36', res)\n            dispatch(fetchUserQuestionsSuccess(res.userQuestion))\n        })\n        .catch(err => {\n            dispatch(fetchUserQuestionsError(err));\n        });\n};\n\nexport const userGuess = (guess) => {\n    return {\n        type: SUBMIT_USERANSWER_SUCCESS,\n        guess\n    }\n} \n\n\n\n\n"]},"metadata":{},"sourceType":"module"}